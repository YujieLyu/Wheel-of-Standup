{"version":3,"sources":["LeftBox/AddElement.js","LeftBox/ElementList.js","MidBox/Pie.js","RightBox/RightBox.js","App.js","serviceWorker.js","index.js"],"names":["AddElement","state","name","handleSubmit","e","preventDefault","props","addElement","setState","handleChange","target","value","className","onSubmit","this","type","onChange","Component","ElementList","id","resetPieList","console","log","newEle","elementList","length","map","ele","key","defaultChecked","checkedList","some","htmlFor","createList","Pie","degree","handleClick","deg","Math","floor","random","sliceAngle","skewValue","pieEleList","i","style","transform","background","colorList","createPie","onClick","RightBox","shuffleWheel","App","allElementList","colorsList","updatedElementList","filter","find","updatedPieEleList","updatedCanElList","updatedList","sort","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f640338a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass AddElement extends Component {\r\n    state = {\r\n        name: ''\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (this.state.name !== '') {\r\n            this.props.addElement(this.state);\r\n        }\r\n        this.setState({\r\n            name: ''\r\n        })\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            name: e.target.value\r\n        })\r\n        // console.log(this.state)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"addElementForm\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <input type=\"text\" onChange={this.handleChange} value={this.state.name}></input>\r\n                    <button className=\"addBtn\">Add New Candidate</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddElement","import React, { Component } from 'react';\r\nimport './leftBox.scss'\r\n\r\nimport AddElement from './AddElement';\r\n\r\nclass ElementList extends Component {\r\n\r\n    handleChange = (id) => {\r\n        this.props.resetPieList(id)\r\n        console.log(id)\r\n    }\r\n\r\n    createList() {\r\n        let elementList = this.props.elementList;\r\n        return elementList.length > 0 ? (\r\n            elementList.map(ele =>\r\n                <div key={ele.id}>\r\n                    <input type=\"checkbox\" defaultChecked={this.props.checkedList.some(e => e.id === ele.id)} onChange={() => { this.handleChange(ele.id) }} ></input>\r\n                    <label htmlFor={ele.id}>{ele.name}</label>\r\n                </div>\r\n            )) : (null)\r\n    }\r\n\r\n    addElement = (newEle) => {\r\n        this.props.addElement(newEle);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"LeftBox\">\r\n                <h3>Customize the wheel</h3>\r\n                <p>(Ver 2.1.2.dev1.200623_beta)</p>\r\n                <p>No less than 3 options</p>\r\n                {this.createList()}\r\n                <AddElement addElement={this.addElement} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ElementList\r\n","import React, { Component } from 'react';\r\nimport './midBox.scss';\r\n\r\nclass Pie extends Component {\r\n    state = {\r\n        degree: null\r\n    }\r\n\r\n    createPie() {\r\n        let pieEleList = [...this.props.pieEleList]\r\n        let sliceAngle, skewValue;\r\n        sliceAngle = 360 / pieEleList.length;\r\n        skewValue = sliceAngle + 90;\r\n\r\n        return pieEleList.length > 0 ? (\r\n            pieEleList.map((ele, i) =>\r\n                (<div key={ele.id}>\r\n                    <li className=\"midBoxPie__pieSlice\" style={{\r\n                        transform: 'rotate(' + sliceAngle * i + 'deg) skewY(' + skewValue + 'deg)',\r\n                        background: this.props.colorList[i]\r\n                    }}>\r\n                        <div className=\"midBoxPie__pieSliceName\" style={{ transform: 'skewY(' + (180 - skewValue) + 'deg) rotate(' + sliceAngle / 2 + 'deg)' }}>{pieEleList[i].name}</div>\r\n                    </li>\r\n                </div >)\r\n            )) : (null);\r\n    }\r\n\r\n    handleClick = () => {\r\n        let x = 1024;\r\n        let y = 60204;\r\n        let deg = Math.floor(Math.random() * (x - y)) + y;\r\n        this.setState({\r\n            degree: deg\r\n        })\r\n  \r\n        // let deg = Math.floor(100000 + Math.random()  * 90000);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"MidBox\" >\r\n                <ul className=\"midBoxPie\" id=\"pie\" style={{ transform: 'rotate(' + this.state.degree + 'deg)' }}>\r\n                    {this.createPie()}\r\n                </ul>\r\n                <button className=\"midBoxSpin\" onClick={this.handleClick}>GO</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Pie;","import React from 'react';\r\nimport './rightBox.scss'\r\n\r\nconst RightBox = (props) => {\r\n\r\n    return (\r\n        <div className=\"RightBox\">\r\n            <button className=\"shuffleButton\" onClick={props.shuffleWheel}>\r\n                Shuffle the wheel\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RightBox;","import React, { Component } from 'react';\r\nimport './default.scss';\r\n\r\nimport LeftBox from './LeftBox/ElementList';\r\nimport MidBox from './MidBox/Pie';\r\nimport RightBox from './RightBox/RightBox';\r\n\r\n\r\nclass App extends Component {\r\n  state = {\r\n    allElementList: [\r\n      { id: 0, name: 'Adi' },\r\n      { id: 1, name: 'Alex' },\r\n      { id: 2, name: 'Brady' },\r\n      { id: 3, name: 'DD' },\r\n      { id: 4, name: 'Jason' },\r\n      { id: 5, name: 'Jessie' },\r\n      { id: 6, name: 'Marty' },\r\n      { id: 7, name: 'Matt' },\r\n      { id: 8, name: 'Pras' },\r\n      { id: 9, name: 'Rena' },\r\n      { id: 10, name: 'Rod' }\r\n    ],\r\n    pieEleList: [\r\n      { id: 0, name: 'Adi' },\r\n      { id: 1, name: 'Alex' },\r\n      { id: 2, name: 'Brady' },\r\n      { id: 3, name: 'DD' },\r\n      { id: 4, name: 'Jason' },\r\n      { id: 5, name: 'Jessie' },\r\n      { id: 6, name: 'Marty' },\r\n      { id: 7, name: 'Matt' },\r\n      { id: 8, name: 'Pras' },\r\n      { id: 9, name: 'Rena' },\r\n      { id: 10, name: 'Rod' }\r\n    ],\r\n    colorsList: [\r\n      '#fd6363',\r\n      '#fa9d5f',\r\n      '#fac248',\r\n      '#f8de6b',\r\n      '#cbf779',\r\n      '#73fdad',\r\n      '#5cfadd',\r\n      '#60c8f8',\r\n      '#60a7f8',\r\n      '#6f71f8',\r\n      '#a27dfa',\r\n      '#c07dfa',\r\n      '#f391fc',\r\n      '#f860be',\r\n      '#f51d9b',\r\n\r\n    ]\r\n  }\r\n\r\n  resetPieList = (id) => {\r\n    console.log(id)\r\n\r\n    const updatedElementList = this.state.pieEleList.some(ele => ele.id === id) ? (\r\n      this.state.pieEleList.length >= 4 ? (this.state.pieEleList.filter(ele => {\r\n        return ele.id !== id\r\n      })) : (\r\n          [...this.state.pieEleList]\r\n        )\r\n    ) : (\r\n        [...this.state.pieEleList, this.state.allElementList.find(ele => ele.id === id)]\r\n\r\n      )\r\n    this.setState({\r\n      pieEleList: updatedElementList\r\n    })\r\n  }\r\n\r\n  addElement = (newEle) => {\r\n    newEle.id = this.state.allElementList.length;\r\n    let updatedPieEleList = [...this.state.pieEleList, newEle];\r\n    let updatedCanElList = [...this.state.allElementList, newEle];\r\n    this.setState({\r\n      pieEleList: updatedPieEleList,\r\n      allElementList: updatedCanElList\r\n    })\r\n  }\r\n\r\n  shuffleWheel = () => {\r\n    let updatedList = [...this.state.pieEleList];\r\n    this.setState({\r\n      pieEleList: updatedList.sort(() => Math.random() - 0.5)\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"row\">\r\n          <div className=\"col-sm\">\r\n            <LeftBox elementList={this.state.allElementList}\r\n              resetPieList={this.resetPieList}\r\n              addElement={this.addElement}\r\n              checkedList={this.state.pieEleList} />\r\n          </div>\r\n          <div className=\"col-sm\">\r\n            <MidBox pieEleList={this.state.pieEleList} colorList={this.state.colorsList} />\r\n          </div>\r\n          <div className=\"col-sm\">\r\n            <RightBox shuffleWheel={this.shuffleWheel} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}