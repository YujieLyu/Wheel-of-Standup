{"version":3,"sources":["components/CustomButton/customButton.js","components/FormInput/formInput.js","LeftBox/AddElement.js","components/CandidateList/candidateList.js","components/ToggleTips/toggleTips.js","LeftBox/ElementList.js","components/Slice/Slice.js","MidBox/Pie.js","RightBox/RightBox.js","App.js","serviceWorker.js","index.js"],"names":["CustomButton","name","value","isOn","handleClick","className","disabled","onClick","FormInput","handleChange","label","type","onChange","length","AddElement","handleSubmit","e","preventDefault","newCandidate","state","props","addCan","console","log","allList","addElement","axios","post","then","res","setState","target","newEle","updatedPieList","pieList","updatedAllList","id","onSubmit","this","Component","CandidateList","map","eleInAll","key","checked","filter","htmlFor","find","eleInPie","ToggleTips","title","content","useState","isOpened","setIsOpened","ElementList","ele","reSetElementList","deleteCan","refresh","mode","Slice","sliceAngle","index","skewValue","colorListEle","pieListEle","style","transform","background","hex","Pie","alertHost","deg","dist","host","Math","floor","hostName","newHost","toLowerCase","data","setTimeout","deleted","forEach","delete","alert","random","degree","added","colorsList","i","createPie","shuffleWheel","RightBox","determinePieList","standupBtn","retroBtn","sprintPlanBtn","tip","App","getAllList","get","getColorList","getStandupList","standupList","getRetroList","retroList","removed","spriintPlanList","canToDelete","element","push","newCan","updatedList","sort","prevProps","getSpriintPlanList","resetCan","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"geAaeA,G,YAVM,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,KAAKC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACtC,OACI,4BACIC,UAAWH,EACXA,MAAOA,EACPI,SAAUH,EACVI,QAASH,GAAcH,KCoBpBO,G,MAzBG,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,aAAcP,EAAmB,EAAnBA,MAAOQ,EAAY,EAAZA,MACtC,OACI,yBAAKL,UAAU,SACX,2BACIA,UAAU,aACVM,KAAK,OACLC,SAAUH,EACVP,MAAOA,IAEVQ,EACI,2BAAOL,UAAS,UAAKH,EAAMW,OAAS,SAAW,GAA/B,sBAEfH,GAEE,KACR,kBAAC,EAAD,CACAR,MAAM,SACND,KAAK,WC6CFa,E,kDA5DX,aAAe,IAAD,8BACV,gBAMJC,aAAe,SAACC,GACZA,EAAEC,iBACF,IAAMC,EAAe,CACjBjB,KAAM,EAAKkB,MAAMlB,MAErB,EAAKmB,MAAMC,OAAOH,GAClBI,QAAQC,IAAI,EAAKH,MAAMI,SACvB,EAAKC,WAAWP,GACQ,KAApB,EAAKC,MAAMlB,OACXyB,IAAMC,KAAK,wEAAyET,GAC/EU,MAAK,SAAAC,GACFP,QAAQC,IAAIM,MAEpB,EAAKC,SAAS,CACV7B,KAAM,OArBJ,EA2BdQ,aAAe,SAACO,GACZ,EAAKc,SAAS,CACV7B,KAAMe,EAAEe,OAAO7B,SA7BT,EAiCduB,WAAa,SAACO,GAEV,IAAIC,EAAc,sBAAO,EAAKb,MAAMc,SAAlB,CAA2BF,IACzCG,EAAc,sBAAO,EAAKf,MAAMI,SAAlB,CAA2BQ,IAC7CA,EAAOI,GAAKD,EAAetB,OAAS,EACpC,EAAKiB,SAAS,CACVI,QAASD,EACTT,QAASW,KAtCb,EAAKhB,MAAQ,CACTlB,KAAM,IAHA,E,qDA+CV,OACI,yBAAKI,UAAU,kBACX,0BAAMgC,SAAUC,KAAKvB,cACjB,kBAAC,EAAD,CACIN,aAAc6B,KAAK7B,aACnBP,MAAOoC,KAAKnB,MAAMlB,KAClBS,MAAM,wB,GAvDL6B,aCgBVC,G,MAjBO,SAAC,GAAqD,IAAnDhB,EAAkD,EAAlDA,QAASU,EAAyC,EAAzCA,QAASzB,EAAgC,EAAhCA,aAAcL,EAAkB,EAAlBA,YACrD,OAAOoB,EAAQX,OAAS,EACpBW,EAAQiB,KAAI,SAAAC,GAAQ,OAChB,yBAAKC,IAAKD,EAASN,GAAI/B,UAAU,kBAC7B,6BACI,2BAAOM,KAAK,WACRiC,QAASV,EAAQW,QAAO,SAAA7B,GAAC,OAAIA,EAAEf,OAASyC,EAASzC,QAAMY,OAAS,EAChED,SAAU,WAAQH,EAAaiC,MAEnC,2BAAOI,QAASJ,EAASN,IAAKM,EAASzC,OAE3C,yBAAKI,UAAU,SAASE,QAAS,kBAAMH,EAAYsC,EAAUR,EAAQa,MAAK,SAAAC,GAAQ,OAAIA,EAAS/C,OAASyC,EAASzC,WAAjH,SAEF,6C,QCqBCgD,G,MAlCI,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAAc,EACPC,oBAAS,GADF,mBAChCC,EADgC,KACtBC,EADsB,KAOvC,OACI,yBAAKjD,UAAU,cACX,yBAAKA,UAAU,YAAYE,QANpB,WACX+C,GAAY,SAAAD,GAAQ,OAAKA,OAMhBH,GAEJG,GACG,yBAAKhD,UAAU,eACV8C,EAEO,6BAAMA,GAEN,0FAC8D,6BAD9D,0BAEuB,6BAFvB,+CAG4C,6BAH5C,2EAIwE,6BAJxE,0BC2BbI,E,kDAtCX,aAAe,IAAD,8BACV,gBAMJ9C,aAAe,SAAC+C,GACZ,EAAKpC,MAAMqC,iBAAiBD,EAAIvD,OARtB,EAUdG,YAAc,SAACsC,EAAUM,GACrB,EAAK5B,MAAMsC,UAAUhB,EAAUM,IAT/B,EAAK7B,MAAQ,CACTwC,SAAS,GAHH,E,qDAcV,OACI,yBAAKtD,UAAU,WACX,yBAAKA,UAAU,SACX,4BAAKiC,KAAKlB,MAAMwC,KAAhB,UACA,6DAEJ,qDACA,kBAAC,EAAD,CACIpC,QAASc,KAAKlB,MAAMI,QACpBU,QAASI,KAAKlB,MAAMc,QACpBzB,aAAc6B,KAAK7B,aACnBL,YAAakC,KAAKlC,cAEtB,kBAAC,EAAD,CACIoB,QAASc,KAAKlB,MAAMI,QACpBU,QAASI,KAAKlB,MAAMc,QACpBb,OAAQiB,KAAKlB,MAAMC,SACvB,kBAAC,EAAD,CAAY6B,MAAM,kBACdC,QAAQ,kL,GAjCFZ,aCQXsB,G,YAdD,SAAC,GAAgE,IAA9DC,EAA6D,EAA7DA,WAAYC,EAAiD,EAAjDA,MAAOC,EAA0C,EAA1CA,UAAWC,EAA+B,EAA/BA,aAAcC,EAAiB,EAAjBA,WACzD,OACI,wBAAI7D,UAAU,QAAQ8D,MAAO,CACzBC,UAAW,UAAYN,EAAaC,EAAQ,cAAgBC,EAAY,OACxEK,WAAYJ,EAAaK,MAEzB,yBAAKjE,UAAU,aACX8D,MAAO,CAAEC,UAAW,UAAY,IAAMJ,GAAa,eAAiBF,EAAa,EAAI,SACpFI,EAAWjE,SCoJbsE,E,kDAxJX,aAAe,IAAD,8BACV,gBA4BJC,UAAY,SAACC,GACT,IAAIC,EAAO,IAAOD,EAAM,IACpBE,EAAOC,KAAKC,MAAMH,EAAO,EAAKtD,MAAMc,QAAQrB,OAAS,KACrDiE,EAAW,EAAK1D,MAAMc,QAAQyC,GAAM1E,KAClC8E,EAAU,CACZ9E,KAAM6E,GAGV,OADDxD,QAAQC,IAAI,EAAKH,MAAMwC,MACd,EAAKxC,MAAMwC,KAAKoB,eACpB,IAAK,UACDtD,IAAMC,KAAK,qFAAsFoD,GAC5FnD,MAAK,SAAAC,GACFP,QAAQC,IAAIM,GACZP,QAAQC,IAAIM,EAAIoD,SAExBC,YAAW,kBAAM,EAAK9D,MAAM+D,QAAQC,SAAQ,SAAApE,GAAC,OACzCU,IAAM2D,OAAN,2FAAiGrE,EAAEoB,UACpG,KAEH,MACJ,IAAK,QACDV,IAAMC,KAAK,mFAAoFoD,GAC1FnD,MAAK,SAAAC,GACFP,QAAQC,IAAIM,GACZP,QAAQC,IAAIM,EAAIoD,SAExB,MACJ,IAAK,OACDvD,IAAMC,KAAK,kFAAmFoD,GACzFnD,MAAK,SAAAC,GACFP,QAAQC,IAAIM,GACZP,QAAQC,IAAIM,EAAIoD,SAExB,MACJ,QACI3D,QAAQC,IAAI,yCAGpB+D,MAAM,aAAD,OAAcR,EAAd,uCAnEK,EAsEd1E,YAAc,WACV,IAEIqE,EAAMG,KAAKC,OAAM,MAAAD,KAAKW,UADlB,MAER,EAAKzD,SAAS,CACV0D,OAAQf,IAEZS,YAAW,kBAAM,EAAKV,UAAUC,KAAM,MAGtC,EAAKrD,MAAMqE,MAAML,SAAQ,SAAApE,GAAC,OACtBU,IAAMC,KAAK,kFAAmFX,OA/ElG,EAAKG,MAAQ,CACTqE,OAAQ,MAHF,E,wDAQV,IAEI1B,EAAYE,EAFZ9B,EAAO,YAAOI,KAAKlB,MAAMc,SACzBwD,EAAU,YAAOpD,KAAKlB,MAAMsE,YAKhC,OAHA5B,EAAa,IAAM5B,EAAQrB,OAC3BmD,EAAYF,EAAa,GAElB5B,EAAQrB,OAAS,GAAK6E,EAAW7E,OAAS,EAC7CqB,EAAQO,KAAI,SAACe,EAAKmC,GAAN,OAEJ,kBAAC,EAAD,CAAOhD,IAAKgD,EACR7B,WAAYA,EACZC,MAAO4B,EACP3B,UAAWA,EACXE,WAAYV,EACZS,aAAcyB,EAAWC,QAE/B,6C,+BA2GV,OACI,yBAAKtF,UAAU,UACX,wBACIA,UAAU,MACV+B,GAAG,MACH+B,MAAO,CAAEC,UAAW,UAAY9B,KAAKnB,MAAMqE,OAAS,SACnDlD,KAAKsD,aAEV,4BAAQvF,UAAU,OAAOE,QAAS+B,KAAKlC,aAAvC,MAEA,kBAAC,EAAD,CACIF,MAAM,aACND,KAAK,oBACLG,YAAakC,KAAKlB,MAAMyE,oB,GAjJ1BtD,aC6EHuD,G,wDA7EX,aAAe,IAAD,8BACV,gBASJ1F,YAAc,SAACY,GAKX,OAJAM,QAAQC,IAAIP,EAAEe,OAAO7B,OACrB,EAAKkB,MAAM2E,iBAAiB/E,EAAEe,OAAO7B,OAG7Bc,EAAEe,OAAO7B,OACb,IAAK,UACD,EAAK4B,SAAS,CACVkE,YAAY,EACZC,UAAU,EACVC,eAAe,IAEnB,MACJ,IAAK,QACD,EAAKpE,SAAS,CACVkE,YAAY,EACZC,UAAU,EACVC,eAAe,IAEnB,MACJ,IAAK,kBACD,EAAKpE,SAAS,CACVkE,YAAY,EACZC,UAAU,EACVC,eAAe,IAEnB,MACJ,IAAK,OACD,EAAKpE,SAAS,CACVqE,KAAK,IAET,MACJ,QACI7E,QAAQC,IAAI,oCAzCpB,EAAKJ,MAAQ,CACT6E,YAAY,EACZC,UAAU,EACVC,eAAe,EACfC,KAAK,GANC,E,qDAgDV,OACI,yBAAK9F,UAAU,YACX,yBAAKA,UAAU,YACX,kBAAC,EAAD,CACIH,MAAM,UACNC,KAAMmC,KAAKnB,MAAM6E,WACjB5F,YAAakC,KAAKlC,YAClBH,KAAK,YACT,kBAAC,EAAD,CACIC,MAAM,QACNC,KAAMmC,KAAKnB,MAAM8E,SACjB7F,YAAakC,KAAKlC,YAClBH,KAAK,UACT,kBAAC,EAAD,CACIC,MAAM,kBACNC,KAAMmC,KAAKnB,MAAM+E,cACjB9F,YAAakC,KAAKlC,YAClBH,KAAK,qBAEb,yBAAKI,UAAU,iBACX,kBAAC,EAAD,CAAY6C,MAAM,oC,GArEfX,cCmMR6D,E,kDA/Lb,aAAe,IAAD,8BACZ,gBAyBFC,WAAa,WACX3E,IAAM4E,IAAI,yEACP1E,MAAK,SAAAC,GACJ,IAAML,EAAUK,EAAIoD,KACpB,EAAKnD,SAAS,CAAEN,gBA9BR,EAkCd+E,aAAe,WACb7E,IAAM4E,IAAI,4EACP1E,MAAK,SAAAC,GACJ,IAAM6D,EAAa7D,EAAIoD,KACvB,EAAKnD,SAAS,CAAE4D,mBAtCR,EA0Cdc,eAAiB,WACf9E,IAAM4E,IAAI,6EACP1E,MAAK,SAAAC,GACJ,IAAM4E,EAAc5E,EAAIoD,KAExB,EAAKnD,SAAS,CACZ2E,cACAvE,QAASuE,QAjDH,EAsDdC,aAAe,WACbhF,IAAM4E,IAAI,2EACP1E,MAAK,SAAAC,GACJ,IAAM8E,EAAY9E,EAAIoD,KACtB,EAAKnD,SAAS,CAAE6E,kBA1DR,EA8EdZ,iBAAmB,SAACnC,GAElB,OADA,EAAK9B,SAAS,CAAE8B,SACRA,GACN,IAAK,UACH,EAAK9B,SAAS,CACZI,QAAQ,YAAK,EAAKf,MAAMsF,aACxBG,QAAS,GACTnB,MAAO,KAET,MACF,IAAK,QACH,EAAK3D,SAAS,CACZI,QAAQ,YAAK,EAAKf,MAAMwF,WACxBC,QAAS,GACTnB,MAAO,KAET,MACF,IAAK,kBACH,EAAK3D,SAAS,CACZI,QAAQ,YAAK,EAAKf,MAAM0F,iBACxBD,QAAS,GACTnB,MAAO,KAET,MACF,QACEnE,QAAQC,IAAI,mCAvGJ,EA4GdkC,iBAAmB,SAACxD,EAAM2D,GAExB,IACI3B,EADEC,EAAO,YAAO,EAAKf,MAAMe,SAGzB4E,EAAc5E,EAAQa,MAAK,SAAAS,GAAG,OAAIA,EAAIvD,OAASA,KACrD,GAAI6G,EACE5E,EAAQrB,QAAU,GACpBoB,EAAiBC,EAAQW,QAAO,SAAAkE,GAC9B,OAAOA,EAAQ9G,OAASA,KAE1B,EAAKkB,MAAMgE,QAAQ6B,KAAKF,IAExB7E,EAAiBC,MAEd,CACL,IAAI+E,EAAS,EAAK9F,MAAMK,QAAQuB,MAAK,SAAAS,GAAG,OAAIA,EAAIvD,OAASA,KACzD,EAAKkB,MAAMsE,MAAMuB,KAAKC,GACtBA,EAAOrD,KAAOA,EACd3B,EAAc,sBAAOC,GAAP,CAAgB+E,IAEhC,EAAKnF,SAAS,CACZI,QAASD,KAlIC,EAuIdyB,UAAY,SAAChB,EAAUM,GACrB,GAAIN,EAAU,CACZ,IAAMP,EAAiB,EAAKhB,MAAMK,QAAQqB,QAAO,SAAA7B,GAAC,OAAIA,EAAEoB,KAAOM,EAASN,MACxE,EAAKN,SAAS,CAAEN,QAASW,IACzBT,IAAM2D,OAAN,uFAA6F3C,EAASN,KAExG,GAAIY,EAAU,CACZ,IAAMf,EAAiB,EAAKd,MAAMe,QAAQW,QAAO,SAAA7B,GAAC,OAAIA,EAAEoB,KAAOY,EAASZ,MACxE,EAAKN,SAAS,CAAEI,QAASD,IACzBP,IAAM2D,OAAN,2FAAiGrC,EAASZ,OAhJhG,EAoJdf,OAAS,SAAC4F,GACR,IAAM9E,EAAc,sBAAO,EAAKhB,MAAMK,SAAlB,CAA2ByF,IAC/C,EAAKnF,SAAS,CACZN,QAASW,KAvJC,EA2Jd0D,aAAe,WACb,IAAIqB,EAAW,YAAO,EAAK/F,MAAMe,SACjC,EAAKJ,SAAS,CACZI,QAASgF,EAAYC,MAAK,kBAAMvC,KAAKW,SAAW,SA5JlD,EAAKpE,MAAQ,CACXyC,KAAM,UACNpC,QAAS,GACTU,QAAS,GACTiD,QAAS,GACTM,MAAO,GACPgB,YAAa,GACbE,UAAW,GACXE,gBAAiB,GACjBnB,WAAY,IAXF,E,+DAgBK0B,GACbA,EAAUlF,UAAYI,KAAKlB,MAAMc,SAAWkF,EAAU5F,UAAYc,KAAKlB,MAAMI,UAC/Ec,KAAK+D,aACL/D,KAAKiE,eACLjE,KAAKkE,iBACLlE,KAAKoE,eACLpE,KAAK+E,wB,2CAwCa,IAAD,OACnB3F,IAAM4E,IAAI,iFACP1E,MAAK,SAAAC,GACJ,IAAMgF,EAAkBhF,EAAIoD,KAC5B,EAAKnD,SAAS,CAAE+E,yB,0CAKpBvE,KAAK+D,aACL/D,KAAKiE,eACLjE,KAAKkE,iBACLlE,KAAKoE,eACLpE,KAAK+E,uB,+BAwFL,OACE,yBAAKhH,UAAU,OACb,kBAAC,EAAD,CACEuD,KAAMtB,KAAKnB,MAAMyC,KACjBpC,QAASc,KAAKnB,MAAMK,QACpBU,QAASI,KAAKnB,MAAMe,QACpBuB,iBAAkBnB,KAAKmB,iBACvBC,UAAWpB,KAAKoB,UAChBrC,OAAQiB,KAAKjB,SAEf,kBAAC,EAAD,CACEa,QAASI,KAAKnB,MAAMe,QACpBwD,WAAYpD,KAAKnB,MAAMuE,WACvBD,MAAOnD,KAAKnB,MAAMsE,MAClBN,QAAS7C,KAAKnB,MAAMgE,QACpBmC,SAAUhF,KAAKgF,SACf1D,KAAMtB,KAAKnB,MAAMyC,KACjBiC,aAAcvD,KAAKuD,eAErB,kBAAC,EAAD,CAAUE,iBAAkBzD,KAAKyD,wB,GAvLvBxD,aCIEgF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvG,MAAK,SAAAwG,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLjH,QAAQiH,MAAMA,EAAMC,c","file":"static/js/main.a6f02673.chunk.js","sourcesContent":["import React from 'react';\nimport './customButton.scss';\n\nconst CustomButton = ({ name,value, isOn, handleClick }) => {\n    return (\n        <button\n            className={value}\n            value={value}\n            disabled={isOn}\n            onClick={handleClick}>{name}</button>\n    )\n}\n\nexport default CustomButton","import React from 'react';\nimport CustomButton from '../CustomButton/customButton';\nimport './formInput.scss';\n\nconst FormInput = ({ handleChange, value, label }) => {\n    return (\n        <div className='group'>\n            <input\n                className='form-input'\n                type=\"text\"\n                onChange={handleChange}\n                value={value}\n            />\n            {label ?\n                (<label className={`${value.length ? 'shrink' : ''\n                    } form-input-label`}\n                >{label}\n                </label>\n                ) : null}\n            <CustomButton\n            value=\"origin\"\n            name=\"Add\"\n\n            />\n        </div>\n    )\n\n}\n\nexport default FormInput;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport FormInput from '../components/FormInput/formInput'\n\nclass AddElement extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            name: ''\n        }\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const newCandidate = {\n            name: this.state.name\n        }\n        this.props.addCan(newCandidate);\n        console.log(this.props.allList);\n        this.addElement(newCandidate);\n        if (this.state.name !== '') {\n            axios.post('https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/new', newCandidate)\n                .then(res => {\n                    console.log(res);\n                })\n            this.setState({\n                name: ''\n            })\n        }\n\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            name: e.target.value\n        })\n    }\n\n    addElement = (newEle) => {\n\n        let updatedPieList = [...this.props.pieList, newEle];\n        let updatedAllList = [...this.props.allList, newEle];\n        newEle.id = updatedAllList.length - 1;\n        this.setState({\n            pieList: updatedPieList,\n            allList: updatedAllList\n        })\n    }\n\n\n\n    render() {\n        return (\n            <div className=\"addElementForm\">\n                <form onSubmit={this.handleSubmit}>\n                    <FormInput\n                        handleChange={this.handleChange}\n                        value={this.state.name}\n                        label=\"New candidate\" />\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default AddElement","import React from 'react';\nimport './candidateList.scss';\n\nconst CandidateList = ({ allList, pieList, handleChange, handleClick }) => {\n    return allList.length > 0 ? (\n        allList.map(eleInAll =>\n            <div key={eleInAll.id} className='candidate-list'>\n                <div>\n                    <input type=\"checkbox\"\n                        checked={pieList.filter(e => e.name === eleInAll.name).length > 0}\n                        onChange={() => { handleChange(eleInAll) }} >\n                    </input>\n                    <label htmlFor={eleInAll.id}>{eleInAll.name}</label>\n                </div>\n                <div className=\"delete\" onClick={() => handleClick(eleInAll, pieList.find(eleInPie => eleInPie.name === eleInAll.name))}>x</div>\n            </div>\n        )) : (<div>\n            Loading...\n        </div>)\n}\nexport default CandidateList","import React, { useState } from 'react';\nimport './toggleTips.scss';\n\nconst ToggleTips = ({ title, content }) => {\n    const [isOpened, setIsOpened] = useState(false);\n\n    const toggle = () => {\n        setIsOpened(isOpened => !isOpened);\n    }\n\n    return (\n        <div className=\"toggle-tip\">\n            <div className=\"tip-title\" onClick={toggle}>\n                {title}\n            </div>\n            {isOpened && (\n                <div className=\"tip-content\">\n                    {content ?\n                        (\n                            <div>{content}</div>\n                        ) : (\n                            <div>\n                                The functions of the wheels have been improved, including:<br />\n                            1. Removing candidates <br />\n                            2. Recording the last defined candidate list<br />\n                            However, the developer need a bit more time to perfect these features :D<br />\n                            Hope you have fun!\n                            </div>\n\n                        )}\n\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default ToggleTips\n/**\n * The wheels are greatly upgraded!<br/>\n                The functions of the wheels can be run normally, I hope you all have fun. <br/>\n                Sorry for the trouble caused by the previous imperfect version. <br/>\n                The delay was because the developer encountered a problem that could not be solved, but after she took a lot of courses, she finally found a solution.<br/>\n */","import React, { Component } from 'react';\nimport './leftBox.scss';\n\n\nimport AddElement from './AddElement';\n\nimport CandidateList from '../components/CandidateList/candidateList';\nimport ToggleTips from '../components/ToggleTips/toggleTips';\n\nclass ElementList extends Component {\n    constructor() {\n        super();\n        this.state = {\n            refresh: false\n        }\n    }\n\n    handleChange = (ele) => {\n        this.props.reSetElementList(ele.name)\n    }\n    handleClick = (eleInAll, eleInPie) => {\n        this.props.deleteCan(eleInAll, eleInPie)\n    }\n    render() {\n        return (\n            <div className=\"LeftBox\">\n                <div className=\"title\">\n                    <h1>{this.props.mode} Wheel</h1>\n                    <p>(Ver 4.0.1.dev1.200924_alpha)</p>\n                </div>\n                <p>No less than 3 options</p>\n                <CandidateList\n                    allList={this.props.allList}\n                    pieList={this.props.pieList}\n                    handleChange={this.handleChange}\n                    handleClick={this.handleClick}\n                />\n                <AddElement\n                    allList={this.props.allList}\n                    pieList={this.props.pieList}\n                    addCan={this.props.addCan} />\n                <ToggleTips title=\"add/delete tips\"\n                    content=\"Need to refresh the page before deleting the newly added candidates temporarily. The programmer is struggling with the problem of refetching data after component update\" />\n            </div>\n        )\n    }\n}\n\nexport default ElementList\n","import React from 'react';\nimport './styles.scss';\n\nconst Slice = ({ sliceAngle, index, skewValue, colorListEle, pieListEle }) => {\n    return (\n        <li className=\"slice\" style={{\n            transform: 'rotate(' + sliceAngle * index + 'deg) skewY(' + skewValue + 'deg)',\n            background: colorListEle.hex\n        }}>\n            <div className=\"slice-name\"\n                style={{ transform: 'skewY(' + (180 - skewValue) + 'deg) rotate(' + sliceAngle / 2 + 'deg)' }}>\n                {pieListEle.name}\n            </div>\n        </li>\n    )\n}\n\nexport default Slice;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport './pie.scss';\nimport Slice from '../components/Slice/Slice';\nimport CustomButton from '../components/CustomButton/customButton';\n\nclass Pie extends Component {\n    constructor() {\n        super();\n        this.state = {\n            degree: null\n        }\n    }\n\n    createPie() {\n        let pieList = [...this.props.pieList]\n        let colorsList = [...this.props.colorsList]\n        let sliceAngle, skewValue;\n        sliceAngle = 360 / pieList.length;\n        skewValue = sliceAngle + 90;\n\n        return pieList.length > 0 && colorsList.length > 0 ? (\n            pieList.map((ele, i) =>\n                (\n                    <Slice key={i}\n                        sliceAngle={sliceAngle}\n                        index={i}\n                        skewValue={skewValue}\n                        pieListEle={ele}\n                        colorListEle={colorsList[i]} />\n                )\n            )) : (<div>\n                Loading...\n            </div>);\n    }\n\n    alertHost = (deg) => {\n        let dist = 360 - (deg % 360);\n        let host = Math.floor(dist * this.props.pieList.length / 360);\n        let hostName = this.props.pieList[host].name;\n        const newHost = {\n            name: hostName\n        }\n       console.log(this.props.mode)\n        switch (this.props.mode.toLowerCase()) {\n            case \"standup\":\n                axios.post('https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/add-standup-host', newHost)\n                    .then(res => {\n                        console.log(res);\n                        console.log(res.data)\n                    });\n                setTimeout(() => this.props.deleted.forEach(e =>\n                    axios.delete(`https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/sirius-standup/${e.id}`)\n                ), 6000)\n\n                break;\n            case \"retro\":\n                axios.post('https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/add-retro-host', newHost)\n                    .then(res => {\n                        console.log(res);\n                        console.log(res.data)\n                    });\n                break;\n            case \"plan\":\n                axios.post('https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/add-plan-host', newHost)\n                    .then(res => {\n                        console.log(res);\n                        console.log(res.data)\n                    });\n                break;\n            default:\n                console.log('failed to catch mode after alert host')\n        }\n\n        alert(`Congrats, ${hostName} ! You will run the next stand-up`)\n    }\n\n    handleClick = () => {\n        let x = 1024;\n        let y = 60204;\n        let deg = Math.floor(Math.random() * (x - y)) + y;\n        this.setState({\n            degree: deg\n        })\n        setTimeout(() => this.alertHost(deg), 5500);\n\n\n        this.props.added.forEach(e =>\n            axios.post('https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/newStandupCan', e)\n        )\n\n\n        // switch (pieList[0].mode) {\n        //     case \"standup\":\n        //         originPieList.forEach(ele =>\n        //             axios.delete('https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/delete-standup',\n        //                 { data: ele })\n        //                 .then((res) => console.log(res))\n        //                 .catch(err => console.log(err))\n        //         );\n        //         pieList.forEach(ele => axios.post('https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/update-can', ele)\n        //             .catch(err => console.log(err))\n        //         )\n        //         break;\n        //     case \"retro\":\n        //         originPieList.forEach(ele =>\n        //             // console.log(ele)\n        //             axios.delete('https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/delete-retro', { data: ele })\n        //                 .then((res) => console.log(res))\n        //                 .catch(err => console.log(err))\n        //         );\n        //         pieList.forEach(ele => axios.post('https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/update-can', ele))\n        //         break;\n        //     case \"plan\":\n        //         originPieList.forEach(ele =>\n        //             // console.log(ele)\n        //             axios.delete('https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/delete-sprintplan', { data: ele })\n        //                 .then((res) => console.log(res))\n        //                 .catch(err => console.log(err))\n        //         );\n        //         pieList.forEach(ele => axios.post('https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/update-can', ele))\n        //         break;\n        //     default:\n        //         console.log('cannot get the mode for pie');\n        // }\n\n\n        // if (pieList >= 4) {\n        //     console.log(this.props.pieList);\n        //     pieList.map(ele => axios.post('https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/update-can', ele))\n        // } else {\n        //     this.props.resetCan();\n        // }\n        // console.log(this.props.pieList);\n        // console.log(this.props.originPieList);\n    }\n\n    render() {\n        return (\n            <div className=\"MidBox\" >\n                <ul\n                    className=\"pie\"\n                    id=\"pie\"\n                    style={{ transform: 'rotate(' + this.state.degree + 'deg)' }}>\n                    {this.createPie()}\n                </ul>\n                <button className=\"spin\" onClick={this.handleClick}>GO</button>\n\n                <CustomButton\n                    value=\"shuffleBtn\"\n                    name=\"Shuffle the wheel\"\n                    handleClick={this.props.shuffleWheel}\n                />\n            </div>\n        )\n    }\n}\n\n\nexport default Pie;","import React, { Component } from 'react';\nimport './rightBox.scss';\nimport CustomButton from '../components/CustomButton/customButton';\nimport ToggleTips from '../components/ToggleTips/toggleTips';\n\nclass RightBox extends Component {\n    constructor() {\n        super();\n        this.state = {\n            standupBtn: true,\n            retroBtn: false,\n            sprintPlanBtn: false,\n            tip: false\n        }\n    }\n\n    handleClick = (e) => {\n        console.log(e.target.value)\n        this.props.determinePieList(e.target.value)\n\n        // e.target.disabled = e.target.disabled ? false : true;\n        switch (e.target.value) {\n            case \"standup\":\n                this.setState({\n                    standupBtn: true,\n                    retroBtn: false,\n                    sprintPlanBtn: false\n                });\n                break;\n            case \"retro\":\n                this.setState({\n                    standupBtn: false,\n                    retroBtn: true,\n                    sprintPlanBtn: false\n                });\n                break;\n            case \"sprint-planning\":\n                this.setState({\n                    standupBtn: false,\n                    retroBtn: false,\n                    sprintPlanBtn: true\n                });\n                break;\n            case \"tips\":\n                this.setState({\n                    tip: true\n                });\n                break;\n            default:\n                console.log('cannot get the mode for button')\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"RightBox\">\n                <div className=\"btnGroup\">\n                    <CustomButton\n                        value=\"standup\"\n                        isOn={this.state.standupBtn}\n                        handleClick={this.handleClick}\n                        name=\"Standup\" />\n                    <CustomButton\n                        value=\"retro\"\n                        isOn={this.state.retroBtn}\n                        handleClick={this.handleClick}\n                        name=\"Retro\" />\n                    <CustomButton\n                        value=\"sprint-planning\"\n                        isOn={this.state.sprintPlanBtn}\n                        handleClick={this.handleClick}\n                        name=\"Sprint Planning\" />\n                </div>\n                <div className=\"tip-container\">\n                    <ToggleTips title=\"Click to check the update\" />\n                </div>\n\n\n            </div>\n        )\n    }\n}\n\nexport default RightBox;","import React, { Component } from 'react';\nimport './app.scss';\nimport axios from 'axios';\nimport LeftBox from './LeftBox/ElementList';\nimport MidBox from './MidBox/Pie';\nimport RightBox from './RightBox/RightBox';\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      mode: 'Standup',\n      allList: [],\n      pieList: [],\n      deleted: [],\n      added: [],\n      standupList: [],\n      retroList: [],\n      spriintPlanList: [],\n      colorsList: []\n    }\n\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.pieList !== this.props.pieList || prevProps.allList !== this.props.allList) {\n      this.getAllList();\n      this.getColorList();\n      this.getStandupList();\n      this.getRetroList();\n      this.getSpriintPlanList();\n    }\n  }\n\n  getAllList = () => {\n    axios.get('https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/all')\n      .then(res => {\n        const allList = res.data;\n        this.setState({ allList });\n      });\n  }\n\n  getColorList = () => {\n    axios.get('https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/colors')\n      .then(res => {\n        const colorsList = res.data;\n        this.setState({ colorsList })\n      })\n  }\n\n  getStandupList = () => {\n    axios.get('https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/standup')\n      .then(res => {\n        const standupList = res.data;\n\n        this.setState({\n          standupList,\n          pieList: standupList,\n        });\n      })\n  }\n\n  getRetroList = () => {\n    axios.get('https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/retro')\n      .then(res => {\n        const retroList = res.data;\n        this.setState({ retroList })\n      })\n  }\n\n  getSpriintPlanList() {\n    axios.get('https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/sprint-plan')\n      .then(res => {\n        const spriintPlanList = res.data;\n        this.setState({ spriintPlanList })\n      })\n  }\n\n  componentDidMount() {\n    this.getAllList();\n    this.getColorList();\n    this.getStandupList();\n    this.getRetroList();\n    this.getSpriintPlanList();\n  }\n\n  determinePieList = (mode) => {\n    this.setState({ mode })\n    switch (mode) {\n      case 'standup':\n        this.setState({\n          pieList: [...this.state.standupList],\n          removed: [],\n          added: []\n        });\n        break;\n      case 'retro':\n        this.setState({\n          pieList: [...this.state.retroList],\n          removed: [],\n          added: []\n        });\n        break;\n      case 'sprint-planning':\n        this.setState({\n          pieList: [...this.state.spriintPlanList],\n          removed: [],\n          added: []\n        });\n        break;\n      default:\n        console.log('cannot get mode for determine')\n    }\n  }\n\n\n  reSetElementList = (name, mode) => {\n\n    const pieList = [...this.state.pieList];\n    let updatedPieList;\n\n    const canToDelete = pieList.find(ele => ele.name === name)\n    if (canToDelete) {\n      if (pieList.length >= 4) {\n        updatedPieList = pieList.filter(element => {\n          return element.name !== name\n        });\n        this.state.deleted.push(canToDelete);\n      } else {\n        updatedPieList = pieList\n      }\n    } else {\n      let newCan = this.state.allList.find(ele => ele.name === name);\n      this.state.added.push(newCan);\n      newCan.mode = mode;\n      updatedPieList = [...pieList, newCan]\n    }\n    this.setState({\n      pieList: updatedPieList\n    })\n  }\n\n\n  deleteCan = (eleInAll, eleInPie) => {\n    if (eleInAll) {\n      const updatedAllList = this.state.allList.filter(e => e.id !== eleInAll.id);\n      this.setState({ allList: updatedAllList })\n      axios.delete(`https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/sirius-all/${eleInAll.id}`)\n    }\n    if (eleInPie) {\n      const updatedPieList = this.state.pieList.filter(e => e.id !== eleInPie.id);\n      this.setState({ pieList: updatedPieList })\n      axios.delete(`https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/sirius-standup/${eleInPie.id}`)\n    }\n  }\n\n  addCan = (newCan) => {\n    const updatedAllList = [...this.state.allList, newCan]\n    this.setState({\n      allList: updatedAllList\n    })\n  }\n\n  shuffleWheel = () => {\n    let updatedList = [...this.state.pieList];\n    this.setState({\n      pieList: updatedList.sort(() => Math.random() - 0.5)\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <LeftBox\n          mode={this.state.mode}\n          allList={this.state.allList}\n          pieList={this.state.pieList}\n          reSetElementList={this.reSetElementList}\n          deleteCan={this.deleteCan}\n          addCan={this.addCan}\n        />\n        <MidBox\n          pieList={this.state.pieList}\n          colorsList={this.state.colorsList}\n          added={this.state.added}\n          deleted={this.state.deleted}\n          resetCan={this.resetCan}\n          mode={this.state.mode}\n          shuffleWheel={this.shuffleWheel}\n        />\n        <RightBox determinePieList={this.determinePieList} />\n      </div>\n\n\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}