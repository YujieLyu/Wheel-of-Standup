{"version":3,"sources":["components/CustomButton/customButton.js","components/FormInput/formInput.js","LeftBox/AddElement.js","components/CandidateList/candidateList.js","components/ToggleTips/toggleTips.js","LeftBox/ElementList.js","components/Slice/Slice.js","MidBox/Pie.js","RightBox/RightBox.js","App.js","serviceWorker.js","index.js"],"names":["CustomButton","name","value","isOn","handleClick","className","disabled","onClick","FormInput","handleChange","label","type","onChange","length","AddElement","handleSubmit","e","preventDefault","newCandidate","state","props","addCan","addElement","axios","post","then","res","console","log","setState","target","newEle","updatedPieList","pieList","updatedAllList","allList","id","onSubmit","this","Component","CandidateList","map","eleInAll","key","checked","filter","htmlFor","find","eleInPie","ToggleTips","title","content","useState","isOpened","setIsOpened","ElementList","ele","reSetElementList","deleteCan","refresh","mode","Slice","sliceAngle","index","skewValue","colorListEle","pieListEle","style","transform","background","hex","Pie","alertHost","deg","dist","host","Math","floor","hostName","alert","random","degree","setTimeout","toLowerCase","added","forEach","deleted","delete","colorsList","i","createPie","shuffleWheel","RightBox","determinePieList","standupBtn","retroBtn","sprintPlanBtn","tip","App","getAllList","get","data","getColorList","getStandupList","standupList","getRetroList","retroList","removed","sprintPlanList","canToDelete","element","push","newCan","standupID","retroID","sprintplanID","updatedList","sort","prevProps","getSprintPlanList","resetCan","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"geAaeA,G,YAVM,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,KAAKC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACtC,OACI,4BACIC,UAAWH,EACXA,MAAOA,EACPI,SAAUH,EACVI,QAASH,GAAcH,KCoBpBO,G,MAzBG,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,aAAcP,EAAmB,EAAnBA,MAAOQ,EAAY,EAAZA,MACtC,OACI,yBAAKL,UAAU,SACX,2BACIA,UAAU,aACVM,KAAK,OACLC,SAAUH,EACVP,MAAOA,IAEVQ,EACI,2BAAOL,UAAS,UAAKH,EAAMW,OAAS,SAAW,GAA/B,sBAEfH,GAEE,KACR,kBAAC,EAAD,CACAR,MAAM,SACND,KAAK,WC6CFa,E,kDA5DX,aAAe,IAAD,8BACV,gBAMJC,aAAe,SAACC,GACZA,EAAEC,iBACF,IAAMC,EAAe,CACjBjB,KAAM,EAAKkB,MAAMlB,MAErB,EAAKmB,MAAMC,OAAOH,GAElB,EAAKI,WAAWJ,GACQ,KAApB,EAAKC,MAAMlB,OACXsB,IAAMC,KAAK,wEAAyEN,GAC/EO,MAAK,SAAAC,GACFC,QAAQC,IAAIF,MAEpB,EAAKG,SAAS,CACV5B,KAAM,OArBJ,EA2BdQ,aAAe,SAACO,GACZ,EAAKa,SAAS,CACV5B,KAAMe,EAAEc,OAAO5B,SA7BT,EAiCdoB,WAAa,SAACS,GAEV,IAAIC,EAAc,sBAAO,EAAKZ,MAAMa,SAAlB,CAA2BF,IACzCG,EAAc,sBAAO,EAAKd,MAAMe,SAAlB,CAA2BJ,IAC7CA,EAAOK,GAAKF,EAAerB,OAAS,EACpC,EAAKgB,SAAS,CACVI,QAASD,EACTG,QAASD,KAtCb,EAAKf,MAAQ,CACTlB,KAAM,IAHA,E,qDA+CV,OACI,yBAAKI,UAAU,kBACX,0BAAMgC,SAAUC,KAAKvB,cACjB,kBAAC,EAAD,CACIN,aAAc6B,KAAK7B,aACnBP,MAAOoC,KAAKnB,MAAMlB,KAClBS,MAAM,wB,GAvDL6B,aCkBVC,G,MAnBO,SAAC,GAAqD,IAAnDL,EAAkD,EAAlDA,QAASF,EAAyC,EAAzCA,QAASxB,EAAgC,EAAhCA,aAAcL,EAAkB,EAAlBA,YACrD,OAAO+B,EAAQtB,OAAS,EACpBsB,EAAQM,KAAI,SAAAC,GAAQ,OAChB,yBAAKC,IAAKD,EAASN,GAAI/B,UAAU,kBAC7B,6BACI,2BAAOM,KAAK,WACRiC,QAASX,EAAQY,QAAO,SAAA7B,GAAC,OAAIA,EAAEf,OAASyC,EAASzC,QAAMY,OAAS,EAChED,SAAU,WAAQH,EAAaiC,MAEnC,2BAAOI,QAASJ,EAASN,IAAKM,EAASzC,OAE3C,yBAAKI,UAAU,SACXE,QAAS,kBAAMH,EAAYsC,EACvBT,EAAQc,MAAK,SAAAC,GAAQ,OAAIA,EAAS/C,OAASyC,EAASzC,WAF5D,SAIF,6C,QCmBCgD,G,MAlCI,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAAc,EACPC,oBAAS,GADF,mBAChCC,EADgC,KACtBC,EADsB,KAOvC,OACI,yBAAKjD,UAAU,cACX,yBAAKA,UAAU,YAAYE,QANpB,WACX+C,GAAY,SAAAD,GAAQ,OAAKA,OAMhBH,GAEJG,GACG,yBAAKhD,UAAU,eACV8C,EAEO,6BAAMA,GAEN,0FAC8D,6BAD9D,0BAEuB,6BAFvB,+CAG4C,6BAH5C,2EAIwE,6BAJxE,0BC2BbI,E,kDAtCX,aAAe,IAAD,8BACV,gBAMJ9C,aAAe,SAAC+C,GACZ,EAAKpC,MAAMqC,iBAAiBD,EAAIvD,OARtB,EAUdG,YAAc,SAACsC,EAAUM,GACrB,EAAK5B,MAAMsC,UAAUhB,EAAUM,IAT/B,EAAK7B,MAAQ,CACTwC,SAAS,GAHH,E,qDAcV,OACI,yBAAKtD,UAAU,WACX,yBAAKA,UAAU,SACX,4BAAKiC,KAAKlB,MAAMwC,KAAhB,UACA,6DAEJ,qDACA,kBAAC,EAAD,CACIzB,QAASG,KAAKlB,MAAMe,QACpBF,QAASK,KAAKlB,MAAMa,QACpBxB,aAAc6B,KAAK7B,aACnBL,YAAakC,KAAKlC,cAEtB,kBAAC,EAAD,CACI+B,QAASG,KAAKlB,MAAMe,QACpBF,QAASK,KAAKlB,MAAMa,QACpBZ,OAAQiB,KAAKlB,MAAMC,SACvB,kBAAC,EAAD,CAAY6B,MAAM,kBACdC,QAAQ,iL,GAjCFZ,aCQXsB,G,YAdD,SAAC,GAAgE,IAA9DC,EAA6D,EAA7DA,WAAYC,EAAiD,EAAjDA,MAAOC,EAA0C,EAA1CA,UAAWC,EAA+B,EAA/BA,aAAcC,EAAiB,EAAjBA,WACzD,OACI,wBAAI7D,UAAU,QAAQ8D,MAAO,CACzBC,UAAW,UAAYN,EAAaC,EAAQ,cAAgBC,EAAY,OACxEK,WAAYJ,EAAaK,MAEzB,yBAAKjE,UAAU,aACX8D,MAAO,CAAEC,UAAW,UAAY,IAAMJ,GAAa,eAAiBF,EAAa,EAAI,SACpFI,EAAWjE,SC8IbsE,E,kDAlJX,aAAe,IAAD,8BACV,gBA4BJC,UAAY,SAACC,GACT,IAAIC,EAAO,IAAOD,EAAM,IACpBE,EAAOC,KAAKC,MAAMH,EAAO,EAAKtD,MAAMa,QAAQpB,OAAS,KACrDiE,EAAW,EAAK1D,MAAMa,QAAQ0C,GAAM1E,KAExC0B,QAAQC,IAAI,EAAKR,MAAMwC,MAEvBmB,MAAM,aAAD,OAAcD,EAAd,uCApCK,EAuCd1E,YAAc,WACV,IAEIqE,EAAMG,KAAKC,OAAM,MAAAD,KAAKI,UADlB,MAOR,OALA,EAAKnD,SAAS,CACVoD,OAAQR,IAEZS,YAAW,kBAAM,EAAKV,UAAUC,KAAM,MAE9B,EAAKrD,MAAMwC,KAAKuB,eACpB,IAAK,UACD,EAAK/D,MAAMgE,MAAMC,SAAQ,SAAArE,GAAC,OACtBO,IAAMC,KAAK,kFAAmFR,MAElGkE,YAAW,kBAAM,EAAK9D,MAAMkE,QAAQD,SAAQ,SAAArE,GAAC,OACzCO,IAAMgE,OAAN,2FAAiGvE,EAAEoB,UACpG,KACH,MACJ,IAAK,QACD,EAAKhB,MAAMgE,MAAMC,SAAQ,SAAArE,GAAC,OACtBO,IAAMC,KAAK,gFAAiFR,MAEhGkE,YAAW,kBAAM,EAAK9D,MAAMkE,QAAQD,SAAQ,SAAArE,GAAC,OACzCO,IAAMgE,OAAN,yFAA+FvE,EAAEoB,UAClG,KACH,MACJ,IAAK,kBACD,EAAKhB,MAAMgE,MAAMC,SAAQ,SAAArE,GAAC,OACtBO,IAAMC,KAAK,qFAAsFR,MAErGkE,YAAW,kBAAM,EAAK9D,MAAMkE,QAAQD,SAAQ,SAAArE,GAAC,OACzCO,IAAMgE,OAAN,8FAAoGvE,EAAEoB,UACvG,KACH,MACJ,QACIT,QAAQC,IAAI,gDAxEpB,EAAKT,MAAQ,CACT8D,OAAQ,MAHF,E,wDAQV,IAEInB,EAAYE,EAFZ/B,EAAO,YAAOK,KAAKlB,MAAMa,SACzBuD,EAAU,YAAOlD,KAAKlB,MAAMoE,YAKhC,OAHA1B,EAAa,IAAM7B,EAAQpB,OAC3BmD,EAAYF,EAAa,GAElB7B,EAAQpB,OAAS,GAAK2E,EAAW3E,OAAS,EAC7CoB,EAAQQ,KAAI,SAACe,EAAKiC,GAAN,OAEJ,kBAAC,EAAD,CAAO9C,IAAK8C,EACR3B,WAAYA,EACZC,MAAO0B,EACPzB,UAAWA,EACXE,WAAYV,EACZS,aAAcuB,EAAWC,QAE/B,6C,+BAqGV,OACI,yBAAKpF,UAAU,UACX,wBACIA,UAAU,MACV+B,GAAG,MACH+B,MAAO,CAAEC,UAAW,UAAY9B,KAAKnB,MAAM8D,OAAS,SACnD3C,KAAKoD,aAEV,4BAAQrF,UAAU,OAAOE,QAAS+B,KAAKlC,aAAvC,MAEA,kBAAC,EAAD,CACIF,MAAM,aACND,KAAK,oBACLG,YAAakC,KAAKlB,MAAMuE,oB,GA3I1BpD,aC6EHqD,G,wDA7EX,aAAe,IAAD,8BACV,gBASJxF,YAAc,SAACY,GAKX,OAJAW,QAAQC,IAAIZ,EAAEc,OAAO5B,OACrB,EAAKkB,MAAMyE,iBAAiB7E,EAAEc,OAAO5B,OAG7Bc,EAAEc,OAAO5B,OACb,IAAK,UACD,EAAK2B,SAAS,CACViE,YAAY,EACZC,UAAU,EACVC,eAAe,IAEnB,MACJ,IAAK,QACD,EAAKnE,SAAS,CACViE,YAAY,EACZC,UAAU,EACVC,eAAe,IAEnB,MACJ,IAAK,kBACD,EAAKnE,SAAS,CACViE,YAAY,EACZC,UAAU,EACVC,eAAe,IAEnB,MACJ,IAAK,OACD,EAAKnE,SAAS,CACVoE,KAAK,IAET,MACJ,QACItE,QAAQC,IAAI,oCAzCpB,EAAKT,MAAQ,CACT2E,YAAY,EACZC,UAAU,EACVC,eAAe,EACfC,KAAK,GANC,E,qDAgDV,OACI,yBAAK5F,UAAU,YACX,yBAAKA,UAAU,YACX,kBAAC,EAAD,CACIH,MAAM,UACNC,KAAMmC,KAAKnB,MAAM2E,WACjB1F,YAAakC,KAAKlC,YAClBH,KAAK,YACT,kBAAC,EAAD,CACIC,MAAM,QACNC,KAAMmC,KAAKnB,MAAM4E,SACjB3F,YAAakC,KAAKlC,YAClBH,KAAK,UACT,kBAAC,EAAD,CACIC,MAAM,kBACNC,KAAMmC,KAAKnB,MAAM6E,cACjB5F,YAAakC,KAAKlC,YAClBH,KAAK,qBAEb,yBAAKI,UAAU,iBACX,kBAAC,EAAD,CAAY6C,MAAM,oC,GArEfX,cCyOR2D,E,kDArOb,aAAe,IAAD,8BACZ,gBAyBFC,WAAa,WACX5E,IAAM6E,IAAI,yEACP3E,MAAK,SAAAC,GACJ,IAAMS,EAAUT,EAAI2E,KACpB,EAAKxE,SAAS,CAAEM,gBA9BR,EAkCdmE,aAAe,WACb/E,IAAM6E,IAAI,4EACP3E,MAAK,SAAAC,GACJ,IAAM8D,EAAa9D,EAAI2E,KACvB,EAAKxE,SAAS,CAAE2D,mBAtCR,EA0Cde,eAAiB,WACfhF,IAAM6E,IAAI,6EACP3E,MAAK,SAAAC,GACJ,IAAM8E,EAAc9E,EAAI2E,KAExB,EAAKxE,SAAS,CACZ2E,cACAvE,QAASuE,QAjDH,EAsDdC,aAAe,WACblF,IAAM6E,IAAI,2EACP3E,MAAK,SAAAC,GACJ,IAAMgF,EAAYhF,EAAI2E,KACtB,EAAKxE,SAAS,CAAE6E,kBA1DR,EA8Edb,iBAAmB,SAACjC,GAElB,OADA,EAAK/B,SAAS,CAAE+B,SACRA,GACN,IAAK,UACH,EAAK/B,SAAS,CACZI,QAAQ,YAAK,EAAKd,MAAMqF,aACxBG,QAAS,GACTvB,MAAO,KAET,MACF,IAAK,QACH,EAAKvD,SAAS,CACZI,QAAQ,YAAK,EAAKd,MAAMuF,WACxBC,QAAS,GACTvB,MAAO,KAET,MACF,IAAK,kBACH,EAAKvD,SAAS,CACZI,QAAQ,YAAK,EAAKd,MAAMyF,gBACxBD,QAAS,GACTvB,MAAO,KAET,MACF,QACEzD,QAAQC,IAAI,mCAvGJ,EA4Gd6B,iBAAmB,SAACxD,EAAM2D,GAExB,IACI5B,EADEC,EAAO,YAAO,EAAKd,MAAMc,SAGzB4E,EAAc5E,EAAQc,MAAK,SAAAS,GAAG,OAAIA,EAAIvD,OAASA,KACrD,GAAI4G,EACE5E,EAAQpB,QAAU,GACpBmB,EAAiBC,EAAQY,QAAO,SAAAiE,GAC9B,OAAOA,EAAQ7G,OAASA,KAE1B,EAAKkB,MAAMmE,QAAQyB,KAAKF,IAExB7E,EAAiBC,MAEd,CACL,IAAI+E,EAAS,EAAK7F,MAAMgB,QAAQY,MAAK,SAAAS,GAAG,OAAIA,EAAIvD,OAASA,KACzD,EAAKkB,MAAMiE,MAAM2B,KAAKC,GACtBA,EAAOpD,KAAOA,EACd5B,EAAc,sBAAOC,GAAP,CAAgB+E,IAEhC,EAAKnF,SAAS,CACZI,QAASD,KAlIC,EAuId0B,UAAY,SAAChB,EAAUM,GAErB,GADArB,QAAQC,IAAI,yBAA0BoB,GAClCN,EAAU,CACZ,IAAMR,EAAiB,EAAKf,MAAMgB,QAAQU,QAAO,SAAA7B,GAAC,OAAIA,EAAEoB,KAAOM,EAASN,MACxE,EAAKP,SAAS,CAAEM,QAASD,IACzBX,IAAMgE,OAAN,uFAA6F7C,EAASN,KAExG,GAAIY,EAAU,CACZ,IAGIiE,EAAWC,EAASC,EAHlBnF,EAAiB,EAAKb,MAAMc,QAAQY,QAAO,SAAA7B,GAAC,OAAIA,EAAEoB,KAAOY,EAASZ,MAMxE,OALA,EAAKP,SAAS,CAAEI,QAASD,IAKjBgB,EAASY,MACf,IAAK,UACHqD,EAAYjE,EAASZ,GACrB8E,EAAW,EAAK/F,MAAMuF,UAAU7D,QAAO,SAAA7B,GAAC,OAAIA,EAAEf,OAAS+C,EAAS/C,QAAOmC,GACvE+E,EAAgB,EAAKhG,MAAMyF,eAAe/D,QAAO,SAAA7B,GAAC,OAAIA,EAAEf,OAAS+C,EAAS/C,QAAOmC,GACjF,MACF,IAAK,QACH6E,EAAa,EAAK9F,MAAMqF,YAAY3D,QAAO,SAAA7B,GAAC,OAAIA,EAAEf,OAAS+C,EAAS/C,QAAOmC,GAC3E8E,EAAUlE,EAASZ,GACnB+E,EAAgB,EAAKhG,MAAMyF,eAAe/D,QAAO,SAAA7B,GAAC,OAAIA,EAAEf,OAAS+C,EAAS/C,QAAOmC,GACjF,MACF,IAAK,OACH6E,EAAa,EAAK9F,MAAMqF,YAAY3D,QAAO,SAAA7B,GAAC,OAAIA,EAAEf,OAAS+C,EAAS/C,QAAOmC,GAC3E8E,EAAW,EAAK/F,MAAMuF,UAAU7D,QAAO,SAAA7B,GAAC,OAAIA,EAAEf,OAAS+C,EAAS/C,QAAOmC,GACvE+E,EAAenE,EAASZ,GACxB,MACF,QACET,QAAQC,IAAI,iEAEhBD,QAAQC,IAAIqF,EAAWC,EAASC,GAChC5F,IAAMgE,OAAN,2FAAiG0B,IACjG1F,IAAMgE,OAAN,yFAA+F2B,IAC/F3F,IAAMgE,OAAN,8FAAoG4B,MA3K1F,EA0Ld9F,OAAS,SAAC2F,GACR,IAAM9E,EAAc,sBAAO,EAAKf,MAAMgB,SAAlB,CAA2B6E,IAC/C,EAAKnF,SAAS,CACZM,QAASD,KA7LC,EAiMdyD,aAAe,WACb,IAAIyB,EAAW,YAAO,EAAKjG,MAAMc,SACjC,EAAKJ,SAAS,CACZI,QAASmF,EAAYC,MAAK,kBAAMzC,KAAKI,SAAW,SAlMlD,EAAK7D,MAAQ,CACXyC,KAAM,UACNzB,QAAS,GACTF,QAAS,GACTqD,QAAS,GACTF,MAAO,GACPoB,YAAa,GACbE,UAAW,GACXE,eAAgB,GAChBpB,WAAY,IAXF,E,+DAgBK8B,GACbA,EAAUrF,UAAYK,KAAKlB,MAAMa,SAAWqF,EAAUnF,UAAYG,KAAKlB,MAAMe,UAC/EG,KAAK6D,aACL7D,KAAKgE,eACLhE,KAAKiE,iBACLjE,KAAKmE,eACLnE,KAAKiF,uB,0CAwCY,IAAD,OAClBhG,IAAM6E,IAAI,iFACP3E,MAAK,SAAAC,GACJ,IAAMkF,EAAiBlF,EAAI2E,KAC3B,EAAKxE,SAAS,CAAE+E,wB,0CAKpBtE,KAAK6D,aACL7D,KAAKgE,eACLhE,KAAKiE,iBACLjE,KAAKmE,eACLnE,KAAKiF,sB,+BA8HL,OACE,yBAAKlH,UAAU,OACb,kBAAC,EAAD,CACEuD,KAAMtB,KAAKnB,MAAMyC,KACjBzB,QAASG,KAAKnB,MAAMgB,QACpBF,QAASK,KAAKnB,MAAMc,QACpBwB,iBAAkBnB,KAAKmB,iBACvBC,UAAWpB,KAAKoB,UAChBrC,OAAQiB,KAAKjB,SAEf,kBAAC,EAAD,CACEY,QAASK,KAAKnB,MAAMc,QACpBuD,WAAYlD,KAAKnB,MAAMqE,WACvBJ,MAAO9C,KAAKnB,MAAMiE,MAClBE,QAAShD,KAAKnB,MAAMmE,QACpBkC,SAAUlF,KAAKkF,SACf5D,KAAMtB,KAAKnB,MAAMyC,KACjB+B,aAAcrD,KAAKqD,eAErB,kBAAC,EAAD,CAAUE,iBAAkBvD,KAAKuD,wB,GA7NvBtD,aCIEkF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB5G,MAAK,SAAA6G,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL9G,QAAQ8G,MAAMA,EAAMC,c","file":"static/js/main.a12492c0.chunk.js","sourcesContent":["import React from 'react';\nimport './customButton.scss';\n\nconst CustomButton = ({ name,value, isOn, handleClick }) => {\n    return (\n        <button\n            className={value}\n            value={value}\n            disabled={isOn}\n            onClick={handleClick}>{name}</button>\n    )\n}\n\nexport default CustomButton","import React from 'react';\nimport CustomButton from '../CustomButton/customButton';\nimport './formInput.scss';\n\nconst FormInput = ({ handleChange, value, label }) => {\n    return (\n        <div className='group'>\n            <input\n                className='form-input'\n                type=\"text\"\n                onChange={handleChange}\n                value={value}\n            />\n            {label ?\n                (<label className={`${value.length ? 'shrink' : ''\n                    } form-input-label`}\n                >{label}\n                </label>\n                ) : null}\n            <CustomButton\n            value=\"origin\"\n            name=\"Add\"\n\n            />\n        </div>\n    )\n\n}\n\nexport default FormInput;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport FormInput from '../components/FormInput/formInput'\n\nclass AddElement extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            name: ''\n        }\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const newCandidate = {\n            name: this.state.name\n        }\n        this.props.addCan(newCandidate);\n        // console.log(this.props.allList);\n        this.addElement(newCandidate);\n        if (this.state.name !== '') {\n            axios.post('https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/new', newCandidate)\n                .then(res => {\n                    console.log(res);\n                })\n            this.setState({\n                name: ''\n            })\n        }\n\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            name: e.target.value\n        })\n    }\n\n    addElement = (newEle) => {\n\n        let updatedPieList = [...this.props.pieList, newEle];\n        let updatedAllList = [...this.props.allList, newEle];\n        newEle.id = updatedAllList.length - 1;\n        this.setState({\n            pieList: updatedPieList,\n            allList: updatedAllList\n        })\n    }\n\n\n\n    render() {\n        return (\n            <div className=\"addElementForm\">\n                <form onSubmit={this.handleSubmit}>\n                    <FormInput\n                        handleChange={this.handleChange}\n                        value={this.state.name}\n                        label=\"New candidate\" />\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default AddElement","import React from 'react';\nimport './candidateList.scss';\n\nconst CandidateList = ({ allList, pieList, handleChange, handleClick }) => {\n    return allList.length > 0 ? (\n        allList.map(eleInAll =>\n            <div key={eleInAll.id} className='candidate-list'>\n                <div>\n                    <input type=\"checkbox\"\n                        checked={pieList.filter(e => e.name === eleInAll.name).length > 0}\n                        onChange={() => { handleChange(eleInAll) }} >\n                    </input>\n                    <label htmlFor={eleInAll.id}>{eleInAll.name}</label>\n                </div>\n                <div className=\"delete\"\n                    onClick={() => handleClick(eleInAll,\n                        pieList.find(eleInPie => eleInPie.name === eleInAll.name))}>x</div>\n            </div>\n        )) : (<div>\n            Loading...\n        </div>)\n}\nexport default CandidateList","import React, { useState } from 'react';\nimport './toggleTips.scss';\n\nconst ToggleTips = ({ title, content }) => {\n    const [isOpened, setIsOpened] = useState(false);\n\n    const toggle = () => {\n        setIsOpened(isOpened => !isOpened);\n    }\n\n    return (\n        <div className=\"toggle-tip\">\n            <div className=\"tip-title\" onClick={toggle}>\n                {title}\n            </div>\n            {isOpened && (\n                <div className=\"tip-content\">\n                    {content ?\n                        (\n                            <div>{content}</div>\n                        ) : (\n                            <div>\n                                The functions of the wheels have been improved, including:<br />\n                            1. Removing candidates <br />\n                            2. Recording the last defined candidate list<br />\n                            However, the developer need a bit more time to perfect these features :D<br />\n                            Hope you have fun!\n                            </div>\n\n                        )}\n\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default ToggleTips\n/**\n * The wheels are greatly upgraded!<br/>\n                The functions of the wheels can be run normally, I hope you all have fun. <br/>\n                Sorry for the trouble caused by the previous imperfect version. <br/>\n                The delay was because the developer encountered a problem that could not be solved, but after she took a lot of courses, she finally found a solution.<br/>\n */","import React, { Component } from 'react';\nimport './leftBox.scss';\n\n\nimport AddElement from './AddElement';\n\nimport CandidateList from '../components/CandidateList/candidateList';\nimport ToggleTips from '../components/ToggleTips/toggleTips';\n\nclass ElementList extends Component {\n    constructor() {\n        super();\n        this.state = {\n            refresh: false\n        }\n    }\n\n    handleChange = (ele) => {\n        this.props.reSetElementList(ele.name)\n    }\n    handleClick = (eleInAll, eleInPie) => {\n        this.props.deleteCan(eleInAll, eleInPie)\n    }\n    render() {\n        return (\n            <div className=\"LeftBox\">\n                <div className=\"title\">\n                    <h1>{this.props.mode} Wheel</h1>\n                    <p>(Ver 4.0.1.dev1.200924_alpha)</p>\n                </div>\n                <p>No less than 3 options</p>\n                <CandidateList\n                    allList={this.props.allList}\n                    pieList={this.props.pieList}\n                    handleChange={this.handleChange}\n                    handleClick={this.handleClick}\n                />\n                <AddElement\n                    allList={this.props.allList}\n                    pieList={this.props.pieList}\n                    addCan={this.props.addCan} />\n                <ToggleTips title=\"add/delete tips\"\n                    content=\"Need to refresh the page before deleting the newly added candidates temporarily. The developer is struggling with the problem of refetching data after component update\" />\n            </div>\n        )\n    }\n}\n\nexport default ElementList\n","import React from 'react';\nimport './styles.scss';\n\nconst Slice = ({ sliceAngle, index, skewValue, colorListEle, pieListEle }) => {\n    return (\n        <li className=\"slice\" style={{\n            transform: 'rotate(' + sliceAngle * index + 'deg) skewY(' + skewValue + 'deg)',\n            background: colorListEle.hex\n        }}>\n            <div className=\"slice-name\"\n                style={{ transform: 'skewY(' + (180 - skewValue) + 'deg) rotate(' + sliceAngle / 2 + 'deg)' }}>\n                {pieListEle.name}\n            </div>\n        </li>\n    )\n}\n\nexport default Slice;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport './pie.scss';\nimport Slice from '../components/Slice/Slice';\nimport CustomButton from '../components/CustomButton/customButton';\n\nclass Pie extends Component {\n    constructor() {\n        super();\n        this.state = {\n            degree: null\n        }\n    }\n\n    createPie() {\n        let pieList = [...this.props.pieList]\n        let colorsList = [...this.props.colorsList]\n        let sliceAngle, skewValue;\n        sliceAngle = 360 / pieList.length;\n        skewValue = sliceAngle + 90;\n\n        return pieList.length > 0 && colorsList.length > 0 ? (\n            pieList.map((ele, i) =>\n                (\n                    <Slice key={i}\n                        sliceAngle={sliceAngle}\n                        index={i}\n                        skewValue={skewValue}\n                        pieListEle={ele}\n                        colorListEle={colorsList[i]} />\n                )\n            )) : (<div>\n                Loading...\n            </div>);\n    }\n\n    alertHost = (deg) => {\n        let dist = 360 - (deg % 360);\n        let host = Math.floor(dist * this.props.pieList.length / 360);\n        let hostName = this.props.pieList[host].name;\n        \n        console.log(this.props.mode)\n        \n        alert(`Congrats, ${hostName} ! You will run the next stand-up`)\n    }\n\n    handleClick = () => {\n        let x = 1024;\n        let y = 60204;\n        let deg = Math.floor(Math.random() * (x - y)) + y;\n        this.setState({\n            degree: deg\n        })\n        setTimeout(() => this.alertHost(deg), 5500);\n\n        switch (this.props.mode.toLowerCase()) {\n            case \"standup\":\n                this.props.added.forEach(e =>\n                    axios.post('https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/newStandupCan', e)\n                );\n                setTimeout(() => this.props.deleted.forEach(e =>\n                    axios.delete(`https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/sirius-standup/${e.id}`)\n                ), 10000)\n                break;\n            case \"retro\":\n                this.props.added.forEach(e =>\n                    axios.post('https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/newRetroCan', e)\n                );\n                setTimeout(() => this.props.deleted.forEach(e =>\n                    axios.delete(`https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/sirius-retro/${e.id}`)\n                ), 10000)\n                break;\n            case \"sprint-planning\":\n                this.props.added.forEach(e =>\n                    axios.post('https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/newSprintplanCan', e)\n                );\n                setTimeout(() => this.props.deleted.forEach(e =>\n                    axios.delete(`https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/sirius-sprintplan/${e.id}`)\n                ), 10000)\n                break;\n            default:\n                console.log(\"can't find a mode for adding new candidate\")\n        }\n\n\n\n        // switch (pieList[0].mode) {\n        //     case \"standup\":\n        //         originPieList.forEach(ele =>\n        //             axios.delete('https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/delete-standup',\n        //                 { data: ele })\n        //                 .then((res) => console.log(res))\n        //                 .catch(err => console.log(err))\n        //         );\n        //         pieList.forEach(ele => axios.post('https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/update-can', ele)\n        //             .catch(err => console.log(err))\n        //         )\n        //         break;\n        //     case \"retro\":\n        //         originPieList.forEach(ele =>\n        //             // console.log(ele)\n        //             axios.delete('https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/delete-retro', { data: ele })\n        //                 .then((res) => console.log(res))\n        //                 .catch(err => console.log(err))\n        //         );\n        //         pieList.forEach(ele => axios.post('https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/update-can', ele))\n        //         break;\n        //     case \"plan\":\n        //         originPieList.forEach(ele =>\n        //             // console.log(ele)\n        //             axios.delete('https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/delete-sprintplan', { data: ele })\n        //                 .then((res) => console.log(res))\n        //                 .catch(err => console.log(err))\n        //         );\n        //         pieList.forEach(ele => axios.post('https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/update-can', ele))\n        //         break;\n        //     default:\n        //         console.log('cannot get the mode for pie');\n        // }\n\n\n        // if (pieList >= 4) {\n        //     console.log(this.props.pieList);\n        //     pieList.map(ele => axios.post('https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/update-can', ele))\n        // } else {\n        //     this.props.resetCan();\n        // }\n        // console.log(this.props.pieList);\n        // console.log(this.props.originPieList);\n    }\n\n    render() {\n        return (\n            <div className=\"MidBox\" >\n                <ul\n                    className=\"pie\"\n                    id=\"pie\"\n                    style={{ transform: 'rotate(' + this.state.degree + 'deg)' }}>\n                    {this.createPie()}\n                </ul>\n                <button className=\"spin\" onClick={this.handleClick}>GO</button>\n\n                <CustomButton\n                    value=\"shuffleBtn\"\n                    name=\"Shuffle the wheel\"\n                    handleClick={this.props.shuffleWheel}\n                />\n            </div>\n        )\n    }\n}\n\n\nexport default Pie;","import React, { Component } from 'react';\nimport './rightBox.scss';\nimport CustomButton from '../components/CustomButton/customButton';\nimport ToggleTips from '../components/ToggleTips/toggleTips';\n\nclass RightBox extends Component {\n    constructor() {\n        super();\n        this.state = {\n            standupBtn: true,\n            retroBtn: false,\n            sprintPlanBtn: false,\n            tip: false\n        }\n    }\n\n    handleClick = (e) => {\n        console.log(e.target.value)\n        this.props.determinePieList(e.target.value)\n\n        // e.target.disabled = e.target.disabled ? false : true;\n        switch (e.target.value) {\n            case \"standup\":\n                this.setState({\n                    standupBtn: true,\n                    retroBtn: false,\n                    sprintPlanBtn: false\n                });\n                break;\n            case \"retro\":\n                this.setState({\n                    standupBtn: false,\n                    retroBtn: true,\n                    sprintPlanBtn: false\n                });\n                break;\n            case \"sprint-planning\":\n                this.setState({\n                    standupBtn: false,\n                    retroBtn: false,\n                    sprintPlanBtn: true\n                });\n                break;\n            case \"tips\":\n                this.setState({\n                    tip: true\n                });\n                break;\n            default:\n                console.log('cannot get the mode for button')\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"RightBox\">\n                <div className=\"btnGroup\">\n                    <CustomButton\n                        value=\"standup\"\n                        isOn={this.state.standupBtn}\n                        handleClick={this.handleClick}\n                        name=\"Standup\" />\n                    <CustomButton\n                        value=\"retro\"\n                        isOn={this.state.retroBtn}\n                        handleClick={this.handleClick}\n                        name=\"Retro\" />\n                    <CustomButton\n                        value=\"sprint-planning\"\n                        isOn={this.state.sprintPlanBtn}\n                        handleClick={this.handleClick}\n                        name=\"Sprint Planning\" />\n                </div>\n                <div className=\"tip-container\">\n                    <ToggleTips title=\"Click to check the update\" />\n                </div>\n\n\n            </div>\n        )\n    }\n}\n\nexport default RightBox;","import React, { Component } from 'react';\nimport './app.scss';\nimport axios from 'axios';\nimport LeftBox from './LeftBox/ElementList';\nimport MidBox from './MidBox/Pie';\nimport RightBox from './RightBox/RightBox';\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      mode: 'Standup',\n      allList: [],\n      pieList: [],\n      deleted: [],\n      added: [],\n      standupList: [],\n      retroList: [],\n      sprintPlanList: [],\n      colorsList: []\n    }\n\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.pieList !== this.props.pieList || prevProps.allList !== this.props.allList) {\n      this.getAllList();\n      this.getColorList();\n      this.getStandupList();\n      this.getRetroList();\n      this.getSprintPlanList();\n    }\n  }\n\n  getAllList = () => {\n    axios.get('https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/all')\n      .then(res => {\n        const allList = res.data;\n        this.setState({ allList });\n      });\n  }\n\n  getColorList = () => {\n    axios.get('https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/colors')\n      .then(res => {\n        const colorsList = res.data;\n        this.setState({ colorsList })\n      })\n  }\n\n  getStandupList = () => {\n    axios.get('https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/standup')\n      .then(res => {\n        const standupList = res.data;\n\n        this.setState({\n          standupList,\n          pieList: standupList,\n        });\n      })\n  }\n\n  getRetroList = () => {\n    axios.get('https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/retro')\n      .then(res => {\n        const retroList = res.data;\n        this.setState({ retroList })\n      })\n  }\n\n  getSprintPlanList() {\n    axios.get('https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/sprint-plan')\n      .then(res => {\n        const sprintPlanList = res.data;\n        this.setState({ sprintPlanList })\n      })\n  }\n\n  componentDidMount() {\n    this.getAllList();\n    this.getColorList();\n    this.getStandupList();\n    this.getRetroList();\n    this.getSprintPlanList();\n  }\n\n  determinePieList = (mode) => {\n    this.setState({ mode })\n    switch (mode) {\n      case 'standup':\n        this.setState({\n          pieList: [...this.state.standupList],\n          removed: [],\n          added: []\n        });\n        break;\n      case 'retro':\n        this.setState({\n          pieList: [...this.state.retroList],\n          removed: [],\n          added: []\n        });\n        break;\n      case 'sprint-planning':\n        this.setState({\n          pieList: [...this.state.sprintPlanList],\n          removed: [],\n          added: []\n        });\n        break;\n      default:\n        console.log('cannot get mode for determine')\n    }\n  }\n\n\n  reSetElementList = (name, mode) => {\n\n    const pieList = [...this.state.pieList];\n    let updatedPieList;\n\n    const canToDelete = pieList.find(ele => ele.name === name)\n    if (canToDelete) {\n      if (pieList.length >= 4) {\n        updatedPieList = pieList.filter(element => {\n          return element.name !== name\n        });\n        this.state.deleted.push(canToDelete);\n      } else {\n        updatedPieList = pieList\n      }\n    } else {\n      let newCan = this.state.allList.find(ele => ele.name === name);\n      this.state.added.push(newCan);\n      newCan.mode = mode;\n      updatedPieList = [...pieList, newCan]\n    }\n    this.setState({\n      pieList: updatedPieList\n    })\n  }\n\n\n  deleteCan = (eleInAll, eleInPie) => {\n    console.log('here is the ele in pie', eleInPie);\n    if (eleInAll) {\n      const updatedAllList = this.state.allList.filter(e => e.id !== eleInAll.id);\n      this.setState({ allList: updatedAllList })\n      axios.delete(`https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/sirius-all/${eleInAll.id}`)\n    }\n    if (eleInPie) {\n      const updatedPieList = this.state.pieList.filter(e => e.id !== eleInPie.id);\n      this.setState({ pieList: updatedPieList })\n      //TODO: find the id in different list by name\n      let standupID, retroID, sprintplanID;\n      // console.log(eleInPie)\n\n      switch (eleInPie.mode) {\n        case \"standup\":\n          standupID = eleInPie.id;\n          retroID = (this.state.retroList.filter(e => e.name === eleInPie.name)).id;\n          sprintplanID = (this.state.sprintPlanList.filter(e => e.name === eleInPie.name)).id;\n          break;\n        case \"retro\":\n          standupID = (this.state.standupList.filter(e => e.name === eleInPie.name)).id;\n          retroID = eleInPie.id;\n          sprintplanID = (this.state.sprintPlanList.filter(e => e.name === eleInPie.name)).id;\n          break;\n        case \"plan\":\n          standupID = (this.state.standupList.filter(e => e.name === eleInPie.name)).id;\n          retroID = (this.state.retroList.filter(e => e.name === eleInPie.name)).id;\n          sprintplanID = eleInPie.id;\n          break;\n        default:\n          console.log(\"didn't find the mode to remove this element from display list\")\n      }\n      console.log(standupID, retroID, sprintplanID)\n      axios.delete(`https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/sirius-standup/${standupID}`);\n      axios.delete(`https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/sirius-retro/${retroID}`);\n      axios.delete(`https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/sirius-sprintplan/${sprintplanID}`);\n\n    }\n    // if(eleRetro){\n    //   const updatedPieList = this.state.pieList.filter(e => e.id !== eleInPie.id);\n    //   this.setState({ pieList: updatedPieList })\n    //   axios.delete(`https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/sirius-retro/${eleInPie.id}`)\n    // }\n    // if(eleSprintplan){\n    //   const updatedPieList = this.state.pieList.filter(e => e.id !== eleInPie.id);\n    //   this.setState({ pieList: updatedPieList })\n    //   axios.delete(`https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/sirius-sprintplan/${eleInPie.id}`)\n    // }\n  }\n\n  addCan = (newCan) => {\n    const updatedAllList = [...this.state.allList, newCan]\n    this.setState({\n      allList: updatedAllList\n    })\n  }\n\n  shuffleWheel = () => {\n    let updatedList = [...this.state.pieList];\n    this.setState({\n      pieList: updatedList.sort(() => Math.random() - 0.5)\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <LeftBox\n          mode={this.state.mode}\n          allList={this.state.allList}\n          pieList={this.state.pieList}\n          reSetElementList={this.reSetElementList}\n          deleteCan={this.deleteCan}\n          addCan={this.addCan}\n        />\n        <MidBox\n          pieList={this.state.pieList}\n          colorsList={this.state.colorsList}\n          added={this.state.added}\n          deleted={this.state.deleted}\n          resetCan={this.resetCan}\n          mode={this.state.mode}\n          shuffleWheel={this.shuffleWheel}\n        />\n        <RightBox determinePieList={this.determinePieList} />\n      </div>\n\n\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}