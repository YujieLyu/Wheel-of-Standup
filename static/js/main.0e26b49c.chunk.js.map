{"version":3,"sources":["components/CustomButton/customButton.js","components/FormInput/formInput.js","LeftBox/AddElement.js","components/CandidateList/candidateList.js","LeftBox/ElementList.js","components/Slice/Slice.js","MidBox/Pie.js","RightBox/RightBox.js","App.js","serviceWorker.js","index.js"],"names":["CustomButton","name","value","isOn","handleClick","className","disabled","onClick","FormInput","handleChange","label","type","onChange","length","AddElement","handleSubmit","e","preventDefault","newCandidate","state","props","addElement","axios","post","then","res","console","log","data","setState","target","onSubmit","this","Component","CandidateList","allList","pieList","map","ele","key","id","checked","filter","htmlFor","ElementList","reSetElementList","mode","Slice","sliceAngle","index","skewValue","colorListEle","pieListEle","style","transform","background","hex","Pie","alertHost","deg","dist","host","Math","floor","hostName","newHost","alert","random","degree","setTimeout","originPieList","colorsList","i","createPie","shuffleWheel","RightBox","determinePieList","standupBtn","retroBtn","sprintPlanBtn","App","standupList","retroList","spriintPlanList","updatedPieList","some","newCan","find","resetCan","newEle","updatedAllList","updatedList","sort","get","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0e26b49c.chunk.js","sourcesContent":["import React from 'react';\nimport './customButton.scss';\n\nconst CustomButton = ({ name,value, isOn, handleClick }) => {\n    return (\n        <button\n            className={value}\n            value={value}\n            disabled={isOn}\n            onClick={handleClick}>{name}</button>\n    )\n}\n\nexport default CustomButton","import React from 'react';\nimport CustomButton from '../CustomButton/customButton';\nimport './formInput.scss';\n\nconst FormInput = ({ handleChange, value, label }) => {\n    return (\n        <div className='group'>\n            <input\n                className='form-input'\n                type=\"text\"\n                onChange={handleChange}\n                value={value}\n            />\n            {label ?\n                (<label className={`${value.length ? 'shrink' : ''\n                    } form-input-label`}\n                >{label}\n                </label>\n                ) : null}\n            <CustomButton\n            value=\"origin\"\n            name=\"Add\"\n\n            />\n        </div>\n    )\n\n}\n\nexport default FormInput;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport FormInput from '../components/FormInput/formInput'\n\nclass AddElement extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            name: ''\n        }\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const newCandidate = {\n            name: this.state.name\n        }\n        this.props.addElement(newCandidate);\n        if (this.state.name !== '') {\n            axios.post('https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/new', newCandidate)\n                .then(res => {\n                    console.log(res);\n                    console.log(res.data())\n                })\n            this.setState({\n                name: ''\n            })\n        }\n\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            name: e.target.value\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"addElementForm\">\n                <form onSubmit={this.handleSubmit}>\n                    <FormInput\n                        handleChange={this.handleChange}\n                        value={this.state.name}\n                        label=\"Add new candidate\" />\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default AddElement","import React from 'react';\nimport './candidateList.scss';\n\nconst CandidateList = ({ allList, pieList, handleChange }) => {\n    return allList.length > 0 ? (\n        allList.map(ele =>\n            <div key={ele.id} className='candidate-list'>\n                <input type=\"checkbox\"\n                    checked={pieList.filter(e => e.name === ele.name).length > 0}\n                    onChange={() => { handleChange(ele.name) }} >\n                </input>\n                <label htmlFor={ele.id}>{ele.name}</label>\n            </div>\n        )) : (<div>\n            Loading...\n        </div>)\n}\nexport default CandidateList","import React, { Component } from 'react';\nimport './leftBox.scss';\n\nimport AddElement from './AddElement';\n\nimport CandidateList from '../components/CandidateList/candidateList';\n\nclass ElementList extends Component {\n\n    handleChange = (name) => {\n        this.props.reSetElementList(name)\n    }\n    render() {\n        return (\n            <div className=\"LeftBox\">\n                <div className=\"title\">\n                    <h1>{this.props.mode} Wheel</h1>\n                    <p>(Ver 4.0.0.dev1.200922_beta)</p>\n                </div>\n                <p>No less than 3 options</p>\n                <CandidateList\n                    allList={this.props.allList}\n                    pieList={this.props.pieList}\n                    handleChange={this.handleChange} />\n                <AddElement addElement={this.props.addElement} />\n            </div>\n        )\n    }\n}\n\nexport default ElementList\n","import React from 'react';\nimport './styles.scss';\n\nconst Slice = ({ sliceAngle, index, skewValue, colorListEle, pieListEle }) => {\n    console.log(colorListEle)\n    return (\n        <li className=\"slice\" style={{\n            transform: 'rotate(' + sliceAngle * index + 'deg) skewY(' + skewValue + 'deg)',\n            background: colorListEle.hex\n        }}>\n            <div className=\"slice-name\"\n                style={{ transform: 'skewY(' + (180 - skewValue) + 'deg) rotate(' + sliceAngle / 2 + 'deg)' }}>\n                {pieListEle.name}\n            </div>\n        </li>\n    )\n}\n\nexport default Slice;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport './pie.scss';\nimport Slice from '../components/Slice/Slice';\nimport CustomButton from '../components/CustomButton/customButton';\n\nclass Pie extends Component {\n    constructor() {\n        super();\n        this.state = {\n            degree: null,\n            host: null\n        }\n    }\n\n    createPie() {\n        let pieList = [...this.props.pieList]\n        console.log(pieList)\n        let colorsList = [...this.props.colorsList]\n        let sliceAngle, skewValue;\n        sliceAngle = 360 / pieList.length;\n        skewValue = sliceAngle + 90;\n\n        return pieList.length > 0 && colorsList.length > 0 ? (\n            pieList.map((ele, i) =>\n                (\n                    <Slice key={i}\n                        sliceAngle={sliceAngle}\n                        index={i}\n                        skewValue={skewValue}\n                        pieListEle={ele}\n                        colorListEle={colorsList[i]} />\n                )\n            )) : (<div>\n                Loading...\n            </div>);\n    }\n\n    alertHost = (deg) => {\n        let dist = 360 - (deg % 360);\n        let host = Math.floor(dist * this.props.pieList.length / 360);\n        let hostName = this.props.pieList[host].name;\n        this.setState({ host });\n        const newHost = {\n            name: hostName\n        }\n        switch (this.props.pieList[host].mode) {\n            case \"standup\":\n                axios.post('https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/add-standup-host', newHost)\n                    .then(res => {\n                        console.log(res);\n                        console.log(res.data)\n                    });\n                break;\n            case \"retro\":\n                axios.post('https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/add-retro-host', newHost)\n                    .then(res => {\n                        console.log(res);\n                        console.log(res.data)\n                    });\n                break;\n            case \"plan\":\n                axios.post('https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/add-plan-host', newHost)\n                    .then(res => {\n                        console.log(res);\n                        console.log(res.data)\n                    });\n                break;\n        }\n\n        alert(`Congrats, ${hostName} ! You will run the next stand-up`)\n    }\n\n    handleClick = () => {\n        let x = 1024;\n        let y = 60204;\n        let deg = Math.floor(Math.random() * (x - y)) + y;\n        this.setState({\n            degree: deg\n        })\n        setTimeout(() => this.alertHost(deg), 5500);\n\n        const pieList = this.props.pieList;\n        const originPieList = this.props.originPieList;\n\n        // switch (pieList[0].mode) {\n        //     case \"standup\":\n        //         originPieList.forEach(ele =>\n        //             axios.delete('https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/delete-standup',\n        //                 { data: ele })\n        //                 .then((res) => console.log(res))\n        //                 .catch(err => console.log(err))\n        //         );\n        //         pieList.forEach(ele => axios.post('https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/update-can', ele)\n        //             .catch(err => console.log(err))\n        //         )\n        //         break;\n        //     case \"retro\":\n        //         originPieList.forEach(ele =>\n        //             // console.log(ele)\n        //             axios.delete('https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/delete-retro', { data: ele })\n        //                 .then((res) => console.log(res))\n        //                 .catch(err => console.log(err))\n        //         );\n        //         pieList.forEach(ele => axios.post('https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/update-can', ele))\n        //         break;\n        //     case \"plan\":\n        //         originPieList.forEach(ele =>\n        //             // console.log(ele)\n        //             axios.delete('https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/delete-sprintplan', { data: ele })\n        //                 .then((res) => console.log(res))\n        //                 .catch(err => console.log(err))\n        //         );\n        //         pieList.forEach(ele => axios.post('https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/update-can', ele))\n        //         break;\n        //     default:\n        //         console.log('cannot get the mode for pie');\n        // }\n\n\n        // if (pieList >= 4) {\n        //     console.log(this.props.pieList);\n        //     pieList.map(ele => axios.post('https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/update-can', ele))\n        // } else {\n        //     this.props.resetCan();\n        // }\n        // console.log(this.props.pieList);\n        // console.log(this.props.originPieList);\n    }\n\n    render() {\n        return (\n            <div className=\"MidBox\" >\n                <ul\n                    className=\"pie\"\n                    id=\"pie\"\n                    style={{ transform: 'rotate(' + this.state.degree + 'deg)' }}>\n                    {this.createPie()}\n                </ul>\n                <button className=\"spin\" onClick={this.handleClick}>GO</button>\n\n                <CustomButton\n                    value=\"shuffleBtn\"\n                    name=\"Shuffle the wheel\"\n                    handleClick={this.props.shuffleWheel}\n                />\n            </div>\n        )\n    }\n}\n\n\nexport default Pie;","import React, { Component } from 'react';\nimport CustomButton from '../components/CustomButton/customButton';\nimport './rightBox.scss'\n\nclass RightBox extends Component {\n    constructor() {\n        super();\n        this.state = {\n            standupBtn: true,\n            retroBtn: false,\n            sprintPlanBtn: false\n        }\n    }\n\n    handleClick = (e) => {\n        console.log(e.target.value)\n        this.props.determinePieList(e.target.value)\n\n        // e.target.disabled = e.target.disabled ? false : true;\n        switch (e.target.value) {\n            case \"standup\":\n                this.setState({\n                    standupBtn: true,\n                    retroBtn: false,\n                    sprintPlanBtn: false\n                });\n                break;\n            case \"retro\":\n                this.setState({\n                    standupBtn: false,\n                    retroBtn: true,\n                    sprintPlanBtn: false\n                });\n                break;\n            case \"sprint-planning\":\n                this.setState({\n                    standupBtn: false,\n                    retroBtn: false,\n                    sprintPlanBtn: true\n                });\n                break;\n            default:\n                console.log('cannot get the mode for button')\n        }\n    }\n\n\n    render() {\n        return (\n            <div className=\"RightBox\">\n                <div className=\"btnGroup\">\n                    <CustomButton\n                        value=\"standup\"\n                        isOn={this.state.standupBtn}\n                        handleClick={this.handleClick}\n                        name=\"Standup\" />\n                    <CustomButton\n                        value=\"retro\"\n                        isOn={this.state.retroBtn}\n                        handleClick={this.handleClick}\n                        name=\"Retro\" />\n                    <CustomButton\n                        value=\"sprint-planning\"\n                        isOn={this.state.sprintPlanBtn}\n                        handleClick={this.handleClick}\n                        name=\"Sprint Planning\" />\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default RightBox;","import React, { Component } from 'react';\nimport './app.scss';\nimport axios from 'axios';\nimport LeftBox from './LeftBox/ElementList';\nimport MidBox from './MidBox/Pie';\nimport RightBox from './RightBox/RightBox';\n\n\nclass App extends Component {\n\n  state = {\n    mode: 'Standup',\n    allList: [],\n    pieList: [],\n    originPieList: [],\n    standupList: [],\n    retroList: [],\n    spriintPlanList: [],\n    colorsList: []\n  }\n\n  componentDidMount() {\n    axios.get('https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/all')\n      .then(res => {\n        const allList = res.data;\n        this.setState({ allList });\n      });\n\n    axios.get('https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/colors')\n      .then(res => {\n        const colorsList = res.data;\n        this.setState({ colorsList })\n      })\n\n    axios.get('https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/standup')\n      .then(res => {\n        const standupList = res.data;\n\n        this.setState({\n          standupList,\n          pieList: standupList,\n          originPieList: standupList\n        });\n      })\n\n    axios.get('https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/retro')\n      .then(res => {\n        const retroList = res.data;\n        this.setState({ retroList })\n      })\n\n    axios.get('https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/sprint-plan')\n      .then(res => {\n        const spriintPlanList = res.data;\n        this.setState({ spriintPlanList })\n      })\n  }\n\n  determinePieList = (mode) => {\n    this.setState({ mode })\n    switch (mode) {\n      case 'standup':\n        this.setState({\n          pieList: [...this.state.standupList],\n          originPieList: [...this.state.standupList]\n        });\n        break;\n      case 'retro':\n        this.setState({\n          pieList: [...this.state.retroList],\n          originPieList: [...this.state.retroList]\n        });\n        break;\n      case 'sprint-planning':\n        this.setState({\n          pieList: [...this.state.spriintPlanList],\n          originPieList: [...this.state.spriintPlanList]\n        });\n        break;\n      default:\n        console.log('cannot get mode for determine')\n    }\n  }\n\n  reSetElementList = (name, mode) => {\n\n    const pieList = [...this.state.pieList];\n    let updatedPieList;\n\n    if (pieList.some(ele => ele.name === name)) {\n      if (pieList.length >= 4) {\n        updatedPieList = pieList.filter(ele => {\n          return ele.name !== name\n        })\n      } else {\n        updatedPieList = pieList\n      }\n    } else {\n      console.log(this.state.allList);\n      let newCan = this.state.allList.find(ele => ele.name === name);\n      newCan.mode = mode;\n      updatedPieList = [...pieList, newCan]\n    }\n    this.setState({\n      pieList: updatedPieList\n    })\n\n  }\n\n  resetCan = () => {\n    this.state.allList.map(ele => axios.post('https://us-central1-wheel-of-fortune-b4c69.cloudfunctions.net/api/update-can', ele))\n  }\n\n\n  addElement = (newEle) => {\n    newEle.id = this.state.allList.length;\n    let updatedPieList = [...this.state.pieList, newEle];\n    let updatedAllList = [...this.state.allList, newEle];\n    this.setState({\n      pieList: updatedPieList,\n      allList: updatedAllList\n    })\n  }\n\n  shuffleWheel = () => {\n    let updatedList = [...this.state.pieList];\n    this.setState({\n      pieList: updatedList.sort(() => Math.random() - 0.5)\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <LeftBox\n          mode={this.state.mode}\n          allList={this.state.allList}\n          pieList={this.state.pieList}\n          reSetElementList={this.reSetElementList}\n          addElement={this.addElement}\n          // shuffleWheel={this.shuffleWheel}\n        />\n        <MidBox\n          pieList={this.state.pieList}\n          originPieList={this.state.originPieList}\n          colorsList={this.state.colorsList}\n          resetCan={this.resetCan}\n          mode={this.state.mode}\n          shuffleWheel={this.shuffleWheel}\n        />\n        <RightBox determinePieList={this.determinePieList} />\n      </div>\n\n\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}